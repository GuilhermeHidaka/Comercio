unit uCompras;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Phys.FBDef, FireDAC.Phys.IBBase,
  FireDAC.Phys.FB, Vcl.Mask, Vcl.DBCtrls;

type
  TfrmCompras = class(TForm)
    pnlCenter: TPanel;
    pnlMidTop: TPanel;
    pnlTop2: TPanel;
    btnFinalizar: TSpeedButton;
    pnlMidFooter: TPanel;
    lblNomeTela: TLabel;
    btnHome: TBitBtn;
    pnlMid: TPanel;
    pnlDbGrid: TPanel;
    pnlBuscarEstoque: TPanel;
    dbGridEstoqueCompras: TDBGrid;
    pnlDados: TPanel;
    Label1: TLabel;
    lblQtde: TLabel;
    btnSalvarEstoque: TBitBtn;
    pnlEstetico1: TPanel;
    ConexaoCompras: TFDConnection;
    TabelaParaEstoque: TFDQuery;
    fbClient: TFDPhysFBDriverLink;
    dsCompras: TDataSource;
    edtdbQtdeCompras: TDBEdit;
    edtdbCodigoCompras: TDBEdit;
    procedure btnHomeClick(Sender: TObject);
    procedure btnFinalizarClick(Sender: TObject);
    procedure btnSalvarEstoqueClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmCompras: TfrmCompras;

implementation

{$R *.dfm}

uses uMenu;

procedure TfrmCompras.btnFinalizarClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmCompras.btnHomeClick(Sender: TObject);
begin
  frmCompras.Hide;
  frmMenu.Show;
end;

procedure TfrmCompras.btnSalvarEstoqueClick(Sender: TObject);
var
  proCod: integer;
  proEstoque: integer;
  aux : integer;
begin
  //.text -> integer ...
  proCod := StrToInt(edtdbCodigoCompras.Text);
  proEstoque := StrToInt(edtdbQtdeCompras.text);

  //Abrir tabela
  TabelaParaEstoque.Open;

  if TabelaParaEstoque.Locate('COD_PRODUTO', proCod, []) then
    begin
      TabelaParaEstoque.Edit;
      aux := TabelaParaEstoque.FieldByName('ESTOQUE_PRODUTO').AsInteger;
      proEstoque:=aux+proEstoque;
      TabelaParaEstoque.FieldByName('ESTOQUE_PRODUTO').AsInteger := proEstoque;
      TabelaParaEstoque.Post;
      TabelaParaEstoque.ApplyUpdates;
    end
    else
    begin
      ShowMessage('O Código informado está incorreto!');
    end;
  (* edtdbCodigoCompras
    edtdbQtdeCompras
  *)
end;

end.
